library(mice)
1-sum(complete.cases(nhanes2))/nrow(nhanes2)
complete.cases(nhanes2)
nrow(nhanes2)
sum(complete.cases(nhanes2))
# First get just the fully observed data
air.miss = airquality[, 3:4]
a = ampute(air.miss)
airquality[, 3:4]
airquality$Ozone[airquality$Temp >80]
airquality$Ozone[airquality$Temp >90]
airquality[airquality$Temp >90]
airquality$Ozone[,airquality$Temp >90]
airquality[,airquality$Temp >90]
airquality[airquality$Temp >90,]
# First get just the fully observed data
air.miss = airquality[, 3:4]
a = ampute(air.miss)
# Put it back together with the other two variables
air.miss = cbind(airquality[, 1:2], a$amp)
# Check % missing
n = nrow(airquality)
sum(is.na(air.miss$Ozone))/n
sum(is.na(air.miss$Solar.R))/n
sum(is.na(air.miss$Temp))/n
sum(is.na(air.miss$Wind))/n
summary(air.miss)
# Check the missing data pattern
md.pattern(air.miss, rotate.names = T)
imp = mice(air.miss, seed = 1)
summary(imp)
# Check prediction methods:
imp$pred
imp$method
fit = with(imp, lm(Ozone ~ Wind + Temp + Solar.R))
fit
# Pool together the results
pool(fit)
summary(pool(fit))
# To obtain just the fmi:
pool(fit)$pooled$fmi
# To check the rule of thumb:
pool(fit)$pooled$fmi/30
# To check imputed data:
imp$imp
completedData <- complete(imp,1)
completedData
# To check imputed values
imp$imp$Ozone
mdf <- missing_data.frame(air.miss)
# Now using mi package
# install.packages("mi")
library(mi)
mdf <- missing_data.frame(air.miss)
summary(mdf)
# b) Impute the data using mice and seed = 1.
# Pool the results and report the estimated model.
imp = mice(nhanes2, seed = 1)
fit = with(imp, lm(bmi ~ age + hyp + chl))
summary(mice::pool(fit))
# c) Repeat with seed = 2. Are the results the same?
imp = mice(nhanes2, seed = 2)
fit = with(imp, lm(bmi ~ age + hyp + chl))
summary(mice::pool(fit))
# d) Repeat with seed = 1 but now using m = 50. Report the estimated model.
imp = mice(nhanes2, seed = 1, m = 50)
fit = with(imp, lm(bmi ~ age + hyp + chl))
summary(mice::pool(fit))
names(nhanes)
names(nhanes2)
# We use again, as in Quiz 2, the Anscombe dataset from the package carData
# Load the data with:
library(carData)
data(Anscombe)
names(Anscombe)
model = lm(education~income+young+urban,data=Anscombe)
summary(model)
library(mice)
set.seed(954)
ans.miss = ampute(Anscombe, prop = 0.6)$amp
ans.miss = cbind(Anscombe$education, ans.miss[, 2:4])
colnames(ans.miss)[1] = "education"
names(ans.miss)
sum(complete.cases(nhanes2))
# Task 3: Use mice package to obtain the missing patterns matrix.
# How many total cells are missing? (That is, total number of NA)
# Your answer should be a single number.
md.pattern(ans.miss, rotate.names = T)
sum(is.na(air.miss$urban))
sum(is.na(air.miss$income))
sum(is.na(air.miss$young))
sum(is.na(ans.miss$urban))
sum(is.na(ans.miss$income))
sum(is.na(ans.miss$young))
imp = mice(ans.miss, seed = 10)
fit = with(imp, lm(education~income+young+urban))
summary(mice::pool(fit))
mice::pool(fit)$reg
reg=mice::pool(fit)
reg$coef
s=summary(mice::pool(fit))
s$estimate
model$reg
model$coefficients
summary(model)
mean(abs(model$coef - s$estimate)/abs(model$coef))
# Task 5: Keep seed at 10, but increase number of iterations to 50 and impute again.
# Pool and report the average percent change in the coefficients (again, compared to full dataset)
imp = mice(ans.miss, m=50,seed = 10)
fit2 = with(imp, lm(education~income+young+urban))
s2=summary(mice::pool(fit2))
mean(abs(model$coef - s2$estimate)/abs(model$coef))
# Task 6: Now switch to mi package.
library(mi)
# Obtain the missing data patterns. How many different patterns do we have?
# Answer should a single number
mdf <- missing_data.frame(ans.miss)
image(mdf, grayscale=TRUE)
show(mdf)
mdf$patterns
patterns(mdf)
tabulate(mdf@patterns)
levels(mdf@patterns)
mdf@patterns
names(mdf)
# Task 7: Impute the data with default settings, use seed 10 and parallel = F
# pool and report average percent change in coefficients compared to full dataset
# To obtain the coefficients use coef(mipoolresult)
imp.a <- mi(mdf, seed = 10, parallel = F)
res.a = mi::pool(education~income+young+urban, data=imp.a)
coef(res.a)
mean(abs(model$coef - coef(res.a))/abs(model$coef))
show(mdf)
mdf = change(mdf, y = "income", what = "type", to = "po")
show(mdf)
# Task 8: Run diagnostic plots. Change income to positive type, repeat and
# report the resulting mean % change in the regression coefficients.
plot(imp.a)
imp.a <- mi(mdf, seed = 10, parallel = F)
res.a = mi::pool(education~income+young+urban, data=imp.a)
mean(abs(model$coef - coef(res.a))/abs(model$coef))
Rhats(imp.a)
tabulate(mdf@patterns)
levels(mdf@patterns)
# Five-number summary statistics + missing number
summary(mdf)
# Standardized observed values together with missing
image(mdf)
#Missing Data Homework 5
#Read and inspect data set
data <-read.csv("C:/Users/joann/OneDrive/Desktop/missing data/week 2/aug_train.csv",
na.strings = "")
unique(data$relevent_experience )
library(plyr)
data$relevent_experience <- revalue(data$relevent_experience,
c("Has relevent experience"=1))
data$relevent_experience <- revalue(data$relevent_experience,
c("No relevent experience"=0))
data$relevent_experience <-as.numeric(data$relevent_experience)
unique(data$last_new_job)
data$last_new_job <- revalue(data$last_new_job, c("never"=0))
data$last_new_job <- revalue(data$last_new_job, c(">4"=5))
data$last_new_job <-as.numeric(data$last_new_job)
unique(data$enrolled_university )
data$enrolled_university <- revalue(data$enrolled_university,
c("no_enrollment"=0))
data$enrolled_university <- revalue(data$enrolled_university,
c("Part time course"=1))
data$enrolled_university <- revalue(data$enrolled_university,
c("Full time course" = 2))
data$enrolled_university <-as.numeric(data$enrolled_university)
unique(data$education_level)
data$education_level <- as.numeric(factor(data$education_level,
levels = c("Primary School",
"High School","Graduate",
"Masters","Phd")))
unique(data$gender)
data$gender <- as.factor(data$gender)
#I will keep the variables that can be used for my analysis
library(dplyr)
data2 = select(data,'training_hours','gender','relevent_experience',
'last_new_job','enrolled_university','education_level','target')
#Generate missing values for training_hours depending on one variable
library(dplyr)
data_new = select(data,'city_development_index','training_hours')
library(mice)
cont_cat = ampute(data_new,prop = 0.2,patterns=c(1,0),mech = "MAR")$amp
data2['training_hours'] = cont_cat['training_hours']
#check again for the generated missing values
sapply(data2, function(x) sum(is.na(x)))
library(mi)
names(data)
data2 = select(data,'city_development_index','training_hours','gender','relevent_experience',
'last_new_job','enrolled_university','education_level','target')
#Generate missing values for training_hours depending on one variable
library(dplyr)
data_new = select(data,'city_development_index','training_hours')
library(mice)
cont_cat = ampute(data_new,prop = 0.2,patterns=c(1,0),mech = "MAR")$amp
data2['training_hours'] = cont_cat['training_hours']
#check again for the generated missing values
sapply(data2, function(x) sum(is.na(x)))
library(mi)
# Create the missing data frame object
mdf = missing_data.frame(data2)
install.packages(betareg)
install.packages("betareg")
# Create the missing data frame object
mdf = missing_data.frame(data2)
install.packages("betareg")
str(data)
unique(data$major_discipline)
unique(data$experience)
unique(data$company_size)
unique(data$company_type)
summary(model2)
#Q4
#compare pooled result with complete dataset result
#original complete data set
data_complete = na.omit(data)
#model with the original complete data cases
model2 = lm(target ~ training_hours+gender+relevent_experience+last_new_job+
enrolled_university+education_level, data = data_complete)
summary(model2)
data$education_level <- as.numeric(factor(data$education_level,
levels = c("Primary School",
"High School","Graduate",
unique(data$company_size)
data$company_size<-as.numeric(factor(data$company_size,
levels=c("<10","10/49", "50-99",
"100-500","500-999","1000-4999",
"5000-9999","10000+")))
"Masters","Phd")))
data$education_level <- as.numeric(factor(data$education_level,
levels = c("Primary School",
"High School","Graduate",
unique(data$company_size)
data$company_size<-as.numeric(factor(data$company_size,
levels=c("<10","10/49", "50-99",
"100-500","500-999","1000-4999",
"5000-9999","10000+")))
"Masters","Phd")))
data$education_level <- as.numeric(factor(data$education_level,
levels = c("Primary School",
"High School","Graduate",
unique(data$company_size)
data$company_size<-as.numeric(factor(data$company_size,
levels=c("<10","10/49", "50-99",
"100-500","500-999","1000-4999",
"5000-9999","10000+")))
unique(data$company_size)                                                                                                          "Masters","Phd")))
#Missing Data Homework 5
#Read and inspect data set
data <-read.csv("C:/Users/joann/OneDrive/Desktop/missing data/week 2/aug_train.csv",
na.strings = "")
unique(data$relevent_experience )
library(plyr)
data$relevent_experience <- revalue(data$relevent_experience,
c("Has relevent experience"=1))
data$education_level <- as.numeric(factor(data$education_level,
levels = c("Primary School",
"High School","Graduate",
unique(data$company_size)
data$company_size<-as.numeric(factor(data$company_size,
levels=c("<10","10/49", "50-99",
"100-500","500-999","1000-4999",
"5000-9999","10000+")))
"Masters","Phd")))
#Missing Data Homework 5
#Read and inspect data set
data <-read.csv("C:/Users/joann/OneDrive/Desktop/missing data/week 2/aug_train.csv",
na.strings = "")
unique(data$relevent_experience )
unique(data$company_size)
data$company_size <- as.numeric(factor(data$company_size,
levels = c("<10","10/49" ,"50-99" ,
"100-500","500-999","1000-4999",
"5000-9999", "10000+" )))
unique(data$company_type)
str(data)
missing_data.frame(data)
#APSTA-GE 2004 Assignment 5
library(haven)
# Load dataset
data <- read_dta("C:/Users/joann/OneDrive/Desktop/stats-2004/Assignments/Physical attributes.dta")
